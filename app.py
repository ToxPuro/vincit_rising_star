from flask import Flask, request
import services

app = Flask(__name__)

@app.route("/bying_info")
def bying_info():
    """Endpoint for info to then buy and when to sell
    """
    start = int(request.args.get("from"))
    ##add one hour to end date as hinted
    to = int(request.args.get("to")) + 3600
    prices = services.get_prices_in_range(start, to, "eur")
    (buy, sell, difference) = services.max_diff_indexes(prices)
    ## Shouldn't buy when can only generate losses
    if difference <=0:
        return "Don't buy"
    
    ## timestamps generated by adding correct number of 24h
    return ({
        "buy": start + buy*24*3600,
        "sell": start+sell*24*3600
    })



@app.route("/maximum_volume")
def maximum_volume():
    """Endpoint for maximum total volume
    """
    start = int(request.args.get("from"))
    ##add one hour to end date as hinted
    to = int(request.args.get("to")) + 3600
    volumes = services.get_volumes_in_range(start, to, "eur")
    results = services.max_elem_and_index(volumes)

    ## timestamps generated by adding correct number of 24h
    return({
        "max_volume": results[0],
        "day": start+results[1]+24*3600
    })

@app.route("/longest_decreasing")
def longest_decreasing():
    """Endpoint for longest number of days of bitcoin prices decreasing
    """
    start = int(request.args.get("from"))
    ##add one hour to end date as hinted
    to = int(request.args.get("to")) + 3600
    prices = services.get_prices_in_range(start, to, "eur")
    ## -1 since first day isn't counted
    days = services.len_longest_continuos_decreasing_subsequence(prices)-1

    ## timestamps generated by adding correct number of 24h
    return({
        "days": days
    })